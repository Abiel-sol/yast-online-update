/*
 *************************************************************
 *
 *     YaST2      SuSE Labs                        -o)
 *     --------------------                        /\\
 *                                                _\_v
 *           www.suse.de / www.suse.com
 * ----------------------------------------------------------
 *
 * Author:        Gabriele Strattner <gs@suse.de>
 *
 * Purpose:
 *
 * Modify:
 *
 * external function:
 *
 *
 *************************************************************

 $Id$

*/

{
    // Testmode
    boolean test_mode    = lookup ( user_settings, "test_mode", false );

    //////////////////////////////////////////////////////////////////////////////////////
    //  Popups and Defines			                                        //
    //////////////////////////////////////////////////////////////////////////////////////


    /////////////////////////////////////////////////////////////////////////////////////////////////////
    // MAIN:
    /////////////////////////////////////////////////////////////////////////////////////////////////////

    //
    // Map contains information about all new patches, e.g.
    // $["patch-001":["rec", "Patch for NFS server", "03:56", "X"],
    //   "patch-002":["rec", "Noch ein weiterer patch", "02:56", " "]];
    //
    map new_patches = lookup( user_settings, "ftp_patches", $[] );
    
    list table_contents = maplist( `key, `value,
				   new_patches,
				   ``(`item(`id(key),
					    sformat( " %1 ", select(value, 3) ),
					    select(value,0),
					    key,
					    select(value,2),
					    select(value,1))
				      )
				   );

//[ `item(`id(1), " X ", "Security", "234 KB", "Security fix for Netscape"),
//  `item(`id(2), " X ", "YaST2", "500 KB", "YaST2 advanced Net module"),
//  `item(`id(3), "   ", "IMAP", "100 KB", "IMAP Server") ];

    term contents =
	    // main dialog: 
	`VBox(
	      `VSpacing( 0.2 ),
	       `Table(`id(`table),`opt(`hvstretch, `shrinkable), 
		      `header( " ", _("Patch"), _("Mode"), _("Download"), _("Description") ),
		      table_contents
			      ),
	      `VSpacing( 0.2 )
	      );
    
    string help_text = "";

    // helptext  "main dialog online_update"
    string help_text = "";
    
    string help_part1 =  UI("<p>This dialog shows all patches which are
available for download on SuSE ftp server.<br>
The shortcut \"rec\" means it is recommended to install the patch.
\"sec\" is a security patch and is highly recommended to install it.
</p>");
    string help_part2 =  UI("<p>Meaning of the status flags:</p>
<p>
<b>X</b>: Patches concerning your installation are preselected.
They will be downloaded and installed on your system.
If you don't want a certain patch, double
click on line to deselect it.
</p>");
    string help_part3 =  UI("<p>
<b>G</b>: patch is available but not relevant for your installation
(concerns packages which are not installed).
You can download the patch but it will not be installed.
</p>
<p>
<b>_</b>: you have deselected this patch, it will neither
downloaded nor installed.
</p>");

    help_text = help_part1 + help_part2 + help_part3;
    
     // using SetContents (define in online_update.ycp)
     UI(`SetWizardContents(_("List of available patches"), contents, help_text, Args(0), Args(1) ));

      
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   ////  Loop for User Input ....
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    symbol ret = `next;

    repeat
    {
        ret= UI(`UserInput());

	if ( ret == `abort && UI(`ConfirmAbortUpdate(`unusable)) )
	      return `abort;

	if (ret == `next)
        {
	    // Write all patches marked with "X" to user_settings
	    // TODO: unterscheiden NUR download ( installieren )
	}


        ////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////  
        ////////////////////////////////////////////////////////////////////////////////////////////////////////

	if ( ret == `back)
	{

	}

  } until (ret == `next || ret == `back || ret == `cancel);
    
   return ret;
}



