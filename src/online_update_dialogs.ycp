/**
  Summary: YOU dialogs
  Authors: Cornelius Schumacher <cschum@suse.de>
*/

{

  textdomain "online-update";

  import "Label";
  import "Popup";

  global define any YouErrorPopupGeneric( string message, string details,
                                          symbol type )
  ``{

    if ( size( details ) == 0 ) details = _("No details available.");

    string detailsStringOn = _("&Details <<");
    string detailsStringOff = _("&Details >>");

    term detailsButton = `PushButton( `id( `details ), detailsStringOff );

    string heading = _("Error");

    term buttons = nil;
    if ( type == `skip ) {
      buttons = `HBox(
                    detailsButton,
                    `PushButton( `id( `tryagain ), _("Try again") ),
                    `PushButton( `id( `skip ), _("Skip Patch") ),
                    `PushButton( `id( `all ), _("Skip All") ),
                    `PushButton( `id( `abort ), _("Abort Update") )
                );
    } else if ( type == `ignore ) {
      buttons = `HBox(
                    detailsButton,
                    `PushButton( `id( `ok ), Label::IgnoreButton() ),
                    `PushButton( `id( `abort ), _("Abort Update") )
                );
    } else if ( type == `ignorewarning ) {
      heading = _("Warning");
      buttons = `HBox(
                    detailsButton,
                    `PushButton( `id( `retry ), Label::RetryButton() ),
                    `PushButton( `id( `ok ), Label::IgnoreButton() ),
                    `PushButton( `id( `abort ), _("Abort Update") )
                );
    } else {
      buttons = `HBox(
                    detailsButton,
                    `PushButton( `id( `ok ), Label::OKButton() )
                );
    }

    UI::OpenDialog( `opt( `decorated ),
        `VBox(
            `HBox( `HSpacing( 0.5 ), `Left( `Heading( heading ) ) ),
            `VSpacing( 0.2 ),
            `Label( message ),
            `ReplacePoint( `id( `rp ), `Empty() ),
            buttons
        )
    );

    any ret = nil;
    boolean showDetails = false;

    while( ret != `ok && ret != `tryagain && ret != `all &&
           ret != `abort && ret != `skip && ret != `retry ) {
        ret = UI::UserInput();

        if ( ret == `details ) {
            if ( showDetails ) {
                UI::ReplaceWidget( `id( `rp ), `Empty() );
                UI::ChangeWidget( `id( `details ), `Label, detailsStringOff );
            } else {
                UI::ReplaceWidget( `id( `rp ), `HBox( `HSpacing( 0.5 ),
                                                      `HWeight( 1, `RichText( details ) ),
                                                      `HSpacing( 0.5 ) )
                                                     );
                UI::ChangeWidget( `id( `details ), `Label, detailsStringOn );
            }
            showDetails = !showDetails;
        }
    }

    UI::CloseDialog();

    if ( type != `plain ) {
        return ret;
    } else {
        if ( ret ==  `ok ) return true;
        else return false;
    }
  }

  global define symbol YouIgnoreWarningPopup( string message, string details )
  ``{
    return (symbol)YouErrorPopupGeneric( message, details, `ignorewarning );
  }

  global define symbol YouIgnorePopup( string message, string details )
  ``{
    return (symbol)YouErrorPopupGeneric( message, details, `ignore );
  }

  global define symbol YouSkipPopup( string message, string details )
  ``{
    return (symbol)YouErrorPopupGeneric( message, details, `skip );
  }

  global define symbol YouErrorPopup( string message, string details )
  ``{
    return (symbol)YouErrorPopupGeneric( message, details, `plain );
  }

  //  ConfirmAbortUpdate has same layout as/but different text than ConfirmAbort
  global define boolean ConfirmAbortUpdate( symbol how_to )
  ``{
          string what_will_happen = "";

          if ( how_to == `painless )
          {
              // Warning text for aborting the update before a patch is installed
              what_will_happen = _("If you abort the installation now, no patch will be installed.
Your installation will remain untouched.
");
          }
          else if ( how_to == `incomplete )
          {
              // Warning text for aborting if some patches are installed, some not
              what_will_happen = _("Patch download and installation in progress.
If you abort the installation now, the update is incomplete.
Repeat the update, including the download, if desired.
");
          }
          else if ( how_to == `unusable )
          {
              // Warning text for aborting an installation during the install process
              what_will_happen = _("If you abort the installation now,
at least one patch is not installed correctly.
You will need to do the update again.");
          }
          else if ( how_to == `suseconfig )
          {
              // Warning text for aborting an installation without running SuSEconfig
              what_will_happen = _("If you abort the installation now, SuSEconfig will
not be run. The patches have been installed
correctly, but without running SuSEconfig
some of them might not work as expected.");
          }
          else
          {
              y2warning("Unknown symbol for what will happen when aborting - please correct in calling module" );
          }

          UI::OpenDialog(
                     `opt(`decorated),
                     `HBox(
                           `HSpacing(1),
                           `VBox(
                                 `VSpacing(0.2),
                                 `HCenter(
                                          `HSquash(
                                                   `VBox(
                                                         // Confirm user request to abort installation
                                                         `Left( `Label( _("Really abort YaST Online Update?") ) ),
                                                         `Left( `Label( what_will_happen ) )
                                                         )
                                                   )
                                          ),
                                 `HBox(
                                       // Button that will really abort the installation
                                       `PushButton(`id(`really_abort), _("&Abort Update") ),
                                       `HStretch(),

                                       // Button that will continue with the installation
                                       `PushButton(`id(`continue), `opt(`default), _("&Continue Update") )
                                       ),
                                 `VSpacing(0.2)
                                 ),
                           `HSpacing(1)
                           )
                     );

          any ret = UI::UserInput();
          UI::CloseDialog();

          return (ret == `really_abort);
  };

  global define boolean DisplayMsgYou( string message, string header, string yes_button, string no_button )
  ``{
          UI::OpenDialog(
                     `opt(`decorated),
                     `HBox(
                           `HSpacing(1),
                           `VBox(
                                 `Left(`Heading( header)),
                                 `VSpacing(0.2),
                                 `Label(message),
                                 `HBox(`PushButton(`id(`yes), yes_button ),
                                       `PushButton(`id(`no), `opt(`default), no_button )),
                                 `VSpacing(0.2)
                                 ),
                           `HSpacing(1)
                           )
                     );
          any ret = UI::UserInput();
          UI::CloseDialog();
          return (ret == `yes);
  };


  global define boolean DisplayMsgYouOk( string message, string header, string ok_button )
  ``{
          UI::OpenDialog(
                     `opt(`decorated),
                     `HBox(
                           `HSpacing(1),
                           `VBox(
                                 `Left(`Heading( header)),
                                 `VSpacing(0.2),
                                 `Label(message),
                                 `HBox(`PushButton(`id(`ok), `opt(`default), ok_button )),
                                 `VSpacing(0.2)
                                 ),
                           `HSpacing(1)
                           )
                     );
          any ret = UI::UserInput();
          UI::CloseDialog();
          return (ret == `ok);
  };

}
