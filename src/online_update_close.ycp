/*
 *************************************************************
 *
 *     YaST2      SuSE Labs                        -o)
 *     --------------------                        /\\
 *                                                _\_v
 *           www.suse.de / www.suse.com
 * ----------------------------------------------------------
 *
 * Author:        Gabriele Strattner <gs@suse.de>
 *
 * Purpose:
 *
 * Modify:
 *
 * external function:
 *
 *
 *************************************************************

 $Id$

*/

{
    ////////////////////////////////////////////////////////////
    // Testmode, for example fo screenshots
    boolean test_mode    = lookup ( user_settings, "test_mode", false );


    //////////////////////////////////////////////////////////////////////////////////////
    //                                  P O P U P S                                     //
    //////////////////////////////////////////////////////////////////////////////////////

    // None at the moment
    

    //////////////////////////////////////////////////////////////////////////////////////
    // MAIN:
    ///////////////////////////////////////////////////////////////////////////////////////


    term contents =
	    // main dialog: 
	`VBox(
	      `VSpacing( 0.2 ),
	      `Frame( _("Package Update information"),
		      `VBox(`VSpacing(0.5),
			    `Left(`Label(_("Update is finished."))),
			    `HBox(`HWeight( 5,`Left(`Label(_("Status of last update: ") ))),
				  `HWeight( 2,`Left(`Label(`id(`error), "        " )))
				  ),
			    `HBox(`HWeight( 5,`Left(`Label(_("ALL installed security patches: ")))),
				  `HWeight( 2,`Left(`Label(`id(`rec), "         " )))
				  ),
			    `HBox(`HWeight( 5,`Left(`Label(_("ALL installed recommended patches: ")))),
				  `HWeight( 2,`Left(`Label(`id(`sec), "          " )))
				  ),
			    `VSpacing(0.5),
			    `PushButton(`id(`details), `opt(`notify),
					_("&Details") ),
			    `VSpacing(0.5)
			    )
		      ),
	      `VSpacing( 0.5 ),
	      `Left(`CheckBox(`id(`remove_packages),_("Remove source-packages after update."), false))
	      );
    
    string help_text = "";

    // helptext  update is finished 
    string help_part1 =  UI(_("<p>
Online Update is finished.
Your installation is up to date now.
It is recommended to check if there are
new patches available in regular periods.<br></p>"));
    string help_part2 =  UI(_("<p>
If any error occurs during downlod or installation
of the patches, you can check the <b>Details</b>
for further information.
</p>"));
 string help_part3 =  UI(_("<p>
Please try to do the update again, if important
patches could not be installed.
</p>"));
 
    help_text = help_part1 + help_part2 + help_part3;
    
     // using SetContents (define in online_update.ycp)
     UI(`SetWizardContents(_("Online Update Confirmation"), contents, help_text, Args(0), Args(1) ));

     // changing Label to Finish for the last step
     UI(`ChangeWidget(`id(`next), `Label,  _("&Finish") ) );
     UI(`ChangeWidget(`id(`abort), `Enabled,  false ) );

     // set status and close update
     y2debug("ONLINE: close update with status: %1", lookup(user_settings, "ftp_ok", false) );
     any ret = PKGINFO(`ftpCloseUpdate( lookup(user_settings, "ftp_ok", false)) );

     // Show results
     map last_status = PKGINFO(`ftpLastUpdateStatus() );
     y2debug( "ONLINE:  PKGINFO(`ftpLastUpdateStatus(): %1", last_status );
     
     list patch_list = lookup( last_status, "patches", [] );
     integer rec_no = 0;
     integer sec_no = 0;
     integer index = 0;
     
     while (index < size(patch_list) )
     {
	 if ( select(patch_list, index+4) == "installed" )
	 {
	     if ( select(patch_list, index+1) == "recommended" )    	rec_no = rec_no+1;
	     else if ( select(patch_list, index+1) == "security" )    sec_no = sec_no+1;
	 }
	 index = index+5;
     };

     UI(`ChangeWidget(`id(`error), `Value, lookup(last_status, "status", "--" ) ));
     UI(`ChangeWidget(`id(`sec), `Value, sformat("%1", sec_no)) );
     UI(`ChangeWidget(`id(`rec), `Value, sformat("%1", rec_no)) );
     
   /////////////////////////////////////////////////////////////////////////////////////////
   ////  Loop for User Input ....
   /////////////////////////////////////////////////////////////////////////////////////////
    symbol ret = `next;

    repeat
    {
        ret= UI(`UserInput());
	
        if (ret == `details)
        {
	    any retval = CallFunction(`online_update_details( true, false ) );
	    if ( retval == `abort )
	    {
		PKGINFO(`ftpDisconnect());
		return `abort;
	    }
	    
	    ret = `again;
	}
	if ( ret == `next && UI(`QueryWidget(`id(`remove_packages),`Value ) ) )
	{
	    y2debug( "Removing old rpm-packages" );	    
	    // removing rpm s
	    index = 0;
	    while (index < size(patch_list) )
	    {
		if ( select(patch_list, index+4) == "installed" )
		{
		    PKGINFO(`ftpDeletePackages(select(patch_list, index)) );
		}
		index = index+5;
	    };
	}

    } until (ret == `next || ret == `back || ret == `abort || ret == `again );

    // Close connection
    PKGINFO(`ftpDisconnect());
    
   return ret;
}



