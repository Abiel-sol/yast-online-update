/*
 *************************************************************
 *
 *     YaST2      SuSE Labs                        -o)
 *     --------------------                        /\\
 *                                                _\_v
 *           www.suse.de / www.suse.com
 * ----------------------------------------------------------
 *
 * Author:        Gabriele Strattner <gs@suse.de>
 *
 * Purpose:
 *
 * Modify:
 *
 * external function:
 *
 *
 *************************************************************

 $Id$

*/

{
    ////////////////////////////////////////////////////////////
    // Testmode, for example fo screenshots
    boolean test_mode    = lookup ( user_settings, "test_mode", false );

    ////////////////////////////////////////////////////////////
    // Read the current architecture (no architecture depended modes yet
    // string architecture = lookup( user_settings, "architecture", default_architecture);



    //////////////////////////////////////////////////////////////////////////////////////
    //                                  P O P U P S                                     //
    //////////////////////////////////////////////////////////////////////////////////////

    // None at the moment
    

    /////////////////////////////////////////////////////////////////////////////////////////////////////
    // MAIN:
    /////////////////////////////////////////////////////////////////////////////////////////////////////

    // Options to test this modules, but the other modules are in testmode:
    // test_mode   = true;
    // test_mode   = false;
    // todo: comment all options above


    term contents =
	    // main dialog: 
	`VBox(
	      `VSpacing( 0.2 ),
	      `HBox(
		    `HWeight( 50,`VBox (`Left(`Label(_("Connection"))),
					`Left(`Label(`id(`id1),`opt(`outputField), "                          ")) )
			      ),
		    `HWeight( 50,`VBox(`Left(`Label(_("Data transfer"))),
				       `Left(`Label(`id(`id2),`opt(`outputField),  "                          ")) )
			      )
		    ),
	      `HBox(
		    `HWeight( 50,`VBox (`Left(`Label(_("Connection time"))),
					`Left(`Label(`id(`id3),`opt(`outputField), "                           ")) )
			      ),
		    `HWeight( 50,`VBox(`Left(`Label(_("Estimated time"))),
				       `Left(`Label(`id(`id4),`opt(`outputField), "                            ")) )
			      )
		    ),
	      `VSpacing(0.5),
	       `LogView(`id(`log),
			      "Information about the activities",
			      5,	// visible lines
			      10),	// lines to store,
	      `VSpacing( 0.2 )
	      );

    string help_text = "";

    // helptext  "main dialog online_update" 
    string help_part1 =  UI("<p>After connecting to SuSE server
<i>ftp.suse.com</i>, YaST2 will download all available patches.
This could take some time. Several details are shown.</p>");
    string help_part2 =  UI("<p>
Fields above show informations about the connection and
time of data transfer.
Box below displays data from ftp logfile.
</p>");
    string help_part3 =  UI("<p>
If you decide to <b>Abort Update</b>, the ftp connection will
be closed and already downloaded data deleted.
</p>");

    help_text = help_part1 + help_part2 + help_part3;
    
     // using SetContents (define in online_update.ycp)
     UI(`SetWizardContents(_("Connection and Data transfer"), contents, help_text, Args(0), Args(1) ));

     UI(`ChangeWidget(`id(`id1), `Value, _("closed") ));  
     UI(`ChangeWidget(`id(`id2), `Value, _("fkalöfklö") ));
     UI(`ChangeWidget(`id(`id3), `Value, _("30:34:32") ));
     UI(`ChangeWidget(`id(`id4), `Value, _("56:34:45") ));
      
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   ////  Loop for User Input ....
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    symbol ret = `next;

    repeat
    {
        ret= UI(`UserInput());

        ////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////  FINISH
        ////////////////////////////////////////////////////////////////////////////////////////////////////////
	if ( ret == `abort && UI(`ConfirmAbortUpdate(`painless)) )
	    return `abort;
	
        if (ret == `next)
        {

	}


        ////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////  
        ////////////////////////////////////////////////////////////////////////////////////////////////////////

	if ( ret == `back)
	{

	}

  } until (ret == `next || ret == `back || ret == `cancel);
    
   return ret;
}



