/*
 *************************************************************
 *
 *     YaST2      SuSE Labs                        -o)
 *     --------------------                        /\\
 *                                                _\_v
 *           www.suse.de / www.suse.com
 * ----------------------------------------------------------
 *
 * Author:        Gabriele Strattner <gs@suse.de>
 *
 * Purpose:	start module for ftp update
 *		display last update info
 *		possibility to choose automatic or manual mode
 * Modify:
 *
 * external function:
 *
 *
 *************************************************************

 $Id$

*/

{
  boolean test_mode    = lookup ( user_settings, "test_mode", false );
  
   // constant settings
  map ftp_server_map = $["mack"		: ["/update-test/suse"],
			"ftp.suse.com"	: ["/usr/patches"],
			"ftp.suse.de"	: ["/patchroot"] ];
  string rootpath = "/";
  string yastpath = "/var/lib/YaST";
  string patchpath = "/var/lib/YaST/patches";
  string logpath = "/var/log/y2ftp";
  string ftp_server = lookup(user_settings, "ftp_server", "" );

  


    //////////////////////////////////////////////////////////////////////////////////////
    //                                  P O P U P S                                     //
    //////////////////////////////////////////////////////////////////////////////////////



    /////////////////////////////////////////////////////////////////////////////////////
    // MAIN:
    /////////////////////////////////////////////////////////////////////////////////////
    
    map last_status = $[];
    string default_language = "en";
     
    map lang2yast1 = ReadY2("lang2yast1.ycp");

    string language 	 = lookup( user_settings, "language", default_language );
    string long_language = lookup(lang2yast1, language, "english");

    string architecture = lookup( user_settings, "architecture", "i386" );

    list ftp_server_list = [];

    foreach(`server, `info, ftp_server_map, ``{
	ftp_server_list = add(ftp_server_list, server);
    });

    // insert local server like CD, NFS ....
    if ( ftp_server != "" )
    {
	ftp_server_list = add(ftp_server_list, ftp_server );
	ftp_server_list = toset(ftp_server_list);
    }
	    
	// initialize PKGINFO
	UI(`OpenDialog(`opt(`decorated ),`Label(_("Initializing for ftp update; One moment please..."))));
  
	any retval = PKGINFO(`ftpSetEnvironment( $["ftpserver":"ftp.suse.com",
						  "language":long_language,
						  "rootpath":rootpath,
						  "architecture":architecture,
						  "yastpath":yastpath,
						  "logFilename":logpath,
						  "patchpath":patchpath] ) );

	y2debug( "ONLINE: Return  PKGINFO(`ftpsetEnvironment() %1", retval );
	UI(`CloseDialog());
	// Popup is shown if the yast2 component responsible for the ftp update cannot be initialised.
	// This does not mean, connection failed to ftp server, but any other error occured.
	if (!retval && UI(`DisplayMessage(_("Initialisation of ftp server failed.\n
Please check www.suse.de
for further information ."))) )
	    return `abort;
     
    // get last update status from PKGINFO
	last_status = PKGINFO(`ftpLastUpdateStatus() );

    y2debug("ONLINE: last update status: %1", last_status );
          
    // layout main dialog 

    term contents =
	`VBox(
	      `VSpacing( 0.3 ),
	      `HBox(`HWeight(1, `Empty()),
		    `HWeight(8, `Frame (_("Last update information"),
					`VBox(`VSpacing(0.8),
					      `HBox(`HSpacing(0.8),`Left(`Label( sformat(UI(_("Last update was executed\n %1 days ago.")),
								    lookup( last_status, "days", "--" )))),
						    `HSpacing(2.0),
						    `PushButton( `id(`details), `opt(`notify), _("&Details"))
						    ),
					      `VSpacing(0.8)
					      )
					)),
		    `HWeight(1, `Empty())
		    ),
	      `VSpacing(1.0),
	      `HBox(`HWeight(1, `Empty()),
		    `HWeight(8, `Frame (_("Choice of update mode"),
					`RadioButtonGroup(`id(`choice),
							  `VBox(
								`VSpacing(0.3),
								`HBox(`HSpacing(0.8),
								      `Left(`RadioButton(`id(`automatic),`opt(`notify),
											 _("&Automatic Update"), false) )
								      ),
								`VSpacing(0.3),
								`HBox(`HSpacing(0.8),
								      `Left(`RadioButton(`id(`manual),`opt(`notify),
											 _("&Manual Update") ,  false))
								      ),
								`VSpacing(0.3) 
								)
							  )
					)),
		    `HWeight(1, `Empty())
		    ),
	      `VSpacing(1.0),	      
	      `HBox(`HWeight(1, `Empty()),
		    `HWeight(8, `Frame (_("Choice of installation-source"),
					`RadioButtonGroup(`id(`choice),
							  `VBox(
								`VSpacing(0.3),
								`HBox(`HSpacing(1.2),
								      `Left(`ComboBox(`id(`ftp), _("Installation-source"), ftp_server_list )),
								      `PushButton( `id(`local), `opt(`notify), _("&Local"))
								      ),
								`VSpacing(0.3) 
								)
							  )
					)),
		    `HWeight(1, `Empty())
		    ),
	      `VSpacing( 0.5 )
	      );
    
    string help_text = "";

    // helptext dialog online update start screen 
    string help_part1 =  UI(_("<p>
SuSE online update is the easy way to get all recommended
patches and security fixes from SuSE ftp server.<br>
<b>Automatic Update</b> will connect to the server,
fetch the files and install the patches.</p>"));
    
    string help_part2 =  UI(_("<p>
<b>Manual Update</b> will display all available patches
and you can choose which patches should be installed.<br>
Informations about the last update will be shown
if you click on button <b>Details</b>.
</p>"));

    string help_part3 =  UI(_("<p>
If you click on button <b>Local</b> you can select an local
installation-source instead of a ftp-server.
</p>"));
    
    
    help_text = help_part1 + help_part2 + help_part3;
			    
    UI(`SetWizardContents("Welcome to SuSE Package Update", contents, help_text, Args(0), Args(1) ));

    UI(`ChangeWidget(`id(`abort), `Label, _("&Abort Update")) );
    

    if ( lookup(user_settings, "ftp_auto", true ) )
    {
	UI(`ChangeWidget(`id(`automatic), `Value, true ));
	UI(`ChangeWidget(`id(`manual), `Value, false ));
    }
    else
    {
	UI(`ChangeWidget(`id(`automatic), `Value, false ));
	UI(`ChangeWidget(`id(`manual), `Value, true ));
    }

    if ( ftp_server != "" )
    {
	UI(`ChangeWidget(`id(`ftp), `Value, ftp_server ));
    }

    //  Loop for User Input ....

    symbol ret = `next;

    repeat
    {
        ret= UI(`UserInput());

	if ( UI(`QueryWidget(`id(`automatic), `Value ) ) )
	{
	    user_settings = add (user_settings, "ftp_auto", true);
	}
	else
	{
	    user_settings = add (user_settings, "ftp_auto", false);
	}
	    
	string ftp_server =  UI(`QueryWidget(`id(`ftp), `Value ));
	user_settings = add(user_settings, "ftp_server", ftp_server);
	
        if (ret == `next)
        {

	    string update_path = select( lookup(ftp_server_map, ftp_server, ""), 0 );
	      
	    any retval = PKGINFO(`ftpSetServer( ftp_server,
						update_path) );
	    y2debug("ONLINE: PKGINFO(`setFtpServer( %1, %2 ) ): %3", ftp_server, update_path, retval );
		
	    if (retval == nil || retval == false)
	    {
		UI(`DisplayMsgFtp(_("Initialization failed - please try again.
If failure continues, please choose
another SuSE ftp server.")));
		ret = `again;
	    }
	}
	else if ( ret == `details )
	{
	    any retval = CallFunction(`online_update_details( true, false ) );
	    if ( retval == `abort )
		return `abort;
	    
	    ret = `again;
	}
	else if ( ret == `local )
	{
	    any retval = CallFunction(`inst_source( true, false ) );
	    if ( retval == `abort )
		return `abort;

	    ftp_server = lookup ( user_settings, "ftp_server", "" );
	    any retval = PKGINFO(`ftpSetServer( ftp_server,
						"" ) );
	    y2debug("ONLINE: PKGINFO(`setFtpServer( %1, ) ): %3", ftp_server,
		    retval );
		
	    if (retval == nil || retval == false)
	    {
		UI(`DisplayMsgFtp(_("Initialization failed - please try again.
If failure continues, please choose
another SuSE ftp server.")));
	    }
	    ret = `again;
	}
	else if ( ret == `back)
	{

	}
	else if ( ret == `abort && UI(`ConfirmAbortUpdate(`painless)) )
	    return  `abort;
	
  } until (ret == `back || ret == `next || ret == `again);

    y2debug("Return START: %1", ret );
    
   return ret;
}



