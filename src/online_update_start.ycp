/*
 *************************************************************
 *
 *     YaST2      SuSE Labs                        -o)
 *     --------------------                        /\\
 *                                                _\_v
 *           www.suse.de / www.suse.com
 * ----------------------------------------------------------
 *
 * Author:        Gabriele Strattner <gs@suse.de>
 *
 * Purpose:	start module for ftp update
 *		display last update info
 *		possibility to choose automatic or manual mode
 * Modify:
 *
 * external function:
 *
 *
 *************************************************************

 $Id$

*/

{
  boolean test_mode    = lookup ( user_settings, "test_mode", false );

   // constant settings
  map ftpservermap = $["ftp.suse.com"	: ["/usr/patches"],
		      "ftp.suse.de"	: ["/patchroot"] ];

  string yastpath = "/var/lib/YaST";
  string patchpath = "/var/lib/YaST/patches";
  string logpath = "/var/log/y2ftplog";


    //////////////////////////////////////////////////////////////////////////////////////
    //                                  P O P U P S                                     //
    //////////////////////////////////////////////////////////////////////////////////////



    /////////////////////////////////////////////////////////////////////////////////////
    // MAIN:
    /////////////////////////////////////////////////////////////////////////////////////
    
    map last_status = $[];
    string default_language = "en";
     
    map lang2yast1 = ReadY2("lang2yast1.ycp");

    string language 	 = lookup( user_settings, "language", default_language );
    string long_language = lookup(lang2yast1, language, "english");

    string architecture = lookup( user_settings, "architecture", "i386" );

    list ftpserver = [];

    foreach(`server, `info, ftpservermap, ``{
	ftpserver = add(ftpserver, server);
    });
	    
    if ( !test_mode )
    {
	// initialize PKGINFO
	UI(`OpenDialog(`opt(`decorated ),`Label(_("Initializing for ftp update; One moment please..."))));
  
	any retval = PKGINFO(`ftpSetEnvironment( $["language":long_language,
						  "architecture":architecture,
						  "yastpath":yastpath,
						  "patchpath":patchpath,
						  "logfilename":logpath ] ) );

	y2debug( "ONLINE: Return  PKGINFO(`ftpsetEnvironment() %1", retval );
	UI(`CloseDialog());

    }
     
    // get last update status from PKGINFO
    if ( !test_mode )
    {
	last_status = PKGINFO(`ftpLastUpdateStatus() );
    }
    else
    {
	last_status = $["date":"12.10.2000", "days":"25", "status":"ok",
		       "patches":["patch-0-123", "rec", "skdakdöak sdfsdfsdf", "05.10.2000",
				 "sec-fix-988", "sec", "salöda dsösld alsdäladä", "12.10.2000",
				 "sec-fix-123", "sec", "bbbbbb asdfg Gsdfksdf", "12.10.2000" ]];
    }

    y2debug("ONLINE: last update status: %1", last_status );
          
    // layout main dialog 

    term contents =
	`VBox(
	      `VSpacing( 0.3 ),
	      `HBox(`HWeight(1, `Empty()),
		    `HWeight(8, `Frame (_("Last update information"),
					`VBox(`VSpacing(0.8),
					      `HBox(`Label( sformat(UI(_("Last update was executed\n %1 days ago.")),
								    lookup( last_status, "days", "--" ))),
						    `HSpacing(2.0),
						    `PushButton( `id(`details), `opt(`notify), _("&Details"))
						    ),
					      `VSpacing(0.8)
					      )
					)),
		    `HWeight(1, `Empty())
		    ),
	      `VSpacing(2.0),
	      `HBox(`HWeight(1, `Empty()),
		    `HWeight(8, `Frame (_("Choice of update mode and server"),
					`RadioButtonGroup(`id(`choice),
							  `VBox(
								`VSpacing(0.3),
								`HBox(`HSpacing(0.8),
								      `Left(`RadioButton(`id(`automatic),`opt(`notify),
											 _("&Automatic Update"), true) )
								      ),
								`VSpacing(0.3),
								`HBox(`HSpacing(0.8),
								      `Left(`RadioButton(`id(`manual),`opt(`notify),
											 _("&Manual Update") ,  false))
								      ),
								`VSpacing(0.3),
								`HBox(`HSpacing(1.2),
								      `Left(`ComboBox(`id(`ftp), "SuSE ftpserver", ftpserver ))
								      ),
								`VSpacing(0.3) 
								)
							  )
					)),
		    `HWeight(1, `Empty())
		    ),
	      `VSpacing( 0.5 )
	      );
    
    string help_text = "";

    // helptext dialog online update start screen 
    string help_part1 =  UI(_("<p>
SuSE online update is the easy way to get all recommended
patches and security fixes from SuSE ftp server.<br>
<b>Automatic Update</b> will connect to <i>ftp.suse.com</i>,
fetch the files and install the patches.</p>"));
    
    string help_part2 =  UI(_("<p>
<b>Manual Update</b> will display all available patches
and you can choose which patches should be installed.<br>
Informations about the last update will be shown
if you click on button <b>Details</b>.
</p>"));

    help_text = help_part1 + help_part2;
			    
    UI(`SetWizardContents("Welcome to SuSE Package Update", contents, help_text, Args(0), Args(1) ));

    UI(`ChangeWidget(`id(`abort), `Label, _("&Abort Update")) );
    
   

    //  Loop for User Input ....

    symbol ret = `next;

    repeat
    {
        ret= UI(`UserInput());

        if (ret == `next)
        {
	    if ( UI(`QueryWidget(`id(`automatic), `Value ) ) )
	    {
		user_settings = add (user_settings, "ftp_auto", true);
	    }
	    else
	    {
		user_settings = add (user_settings, "ftp_auto", false);
	    }
	    
	    string ftp_server =  UI(`QueryWidget(`id(`ftp), `Value ));
	    user_settings = add(user_settings, "ftp_server", ftp_server);
	    
	    if ( !test_mode )
	    {
		any retval = PKGINFO(`ftpSetServer( ftp_server,
						    update_path) );
		y2debug("ONLINE: PKGINFO(`setFtpServer( %1, %2 ) ): %3", ftp_server, update_path, retval );
		
		if (retval == nil || retval == false)
		{
		    UI(`DisplayFtpMsg(_("Initialization failed - please try again.
If failure continues, please choose
another SuSE ftp server.")));
		    ret = `again;
		}
	    }
	}
	else if ( ret == `details )
	{
	    any retval = CallFunction(`online_update_details( true, false ) );
	    if ( retval == `abort )
		return `abort;
	    
	    ret = `again;
	}
	else if ( ret == `back)
	{

	}
	else if ( ret == `abort && UI(`ConfirmAbortUpdate(`painless)) )
	    return  `abort;
	
  } until (ret == `back || ret == `next || ret == `again);

    y2debug("Return START: %1", ret );
    
   return ret;
}



